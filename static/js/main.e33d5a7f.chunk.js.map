{"version":3,"sources":["QuoteMachine.js","index.js"],"names":["littleWillieText","littleWillie","map","line","QuoteMachine","initialState","author","title","lines","tweetText","join","useState","state","setState","makePoem","poem","buildLines","verse","id","augmented-ui","className","onClick","request","XMLHttpRequest","open","onload","data","JSON","parse","this","response","status","console","reason","log","num","Math","floor","random","length","onerror","send","href","target","ReactDOM","render","document","getElementById"],"mappings":"2QAGMA,EAAmB,CAAC,8BAA+B,8BAA+B,yBAA0B,gCAE5GC,EAAgB,4BACGD,EAAiBE,KAAI,SAACC,GAAW,OAAO,4BAAKA,OAsFvDC,MAnFf,WACE,IAAMC,EAAe,CACnBC,OAAQ,UACRC,MAAO,iBACPC,MAAOP,EACPQ,UAAWT,EAAiBU,KAAK,KAAO,oEALpB,EAOIC,mBAASN,GAPb,mBAOfO,EAPe,KAORC,EAPQ,KAuChBC,EAAW,SAAAC,GACf,IAAMP,EAAQQ,EAAWD,EAAKP,OACxBC,EAAYM,EAAKR,MAAQ,OAASQ,EAAKT,OAAS,IAAMS,EAAKP,MAAME,KAAK,OAC5EG,EAAS,CACPP,OAAQS,EAAKT,OACbC,MAAOQ,EAAKR,MACZC,QACAC,eAIEO,EAAa,SAACR,GAClB,IAAMS,EAAQT,EAAMN,KAAI,SAAAC,GACtB,OAAO,4BAAKA,MAEd,OACE,4BACGc,IAKP,OACE,yBAAKC,GAAG,iBACN,yBAAKA,GAAG,YAAYC,eAAa,sBAC/B,uBAAGD,GAAG,SAASN,EAAML,OACrB,uBAAGW,GAAG,UAAN,MAAmBN,EAAMN,QACzB,uBAAGY,GAAG,QAAQN,EAAMJ,OAEpB,yBAAKY,UAAU,MAAMD,eAAa,sBAAsBE,QA3D5C,WAChB,IACMC,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAFG,uCAEa,GAE7BF,EAAQG,OAAS,WACf,IAAIC,EAAOC,KAAKC,MAAMC,KAAKC,UAC3B,GAAID,KAAKE,QAAU,KAAOF,KAAKE,OAAS,IACtC,GAAGC,QAAQD,QAAUC,QAAQC,OAC3BD,QAAQE,IAAI,gEACZF,QAAQE,IAAIR,EAAKK,QACjBC,QAAQE,IAAIR,EAAKO,YACZ,CACL,IAAME,EAAMC,KAAKC,MAAMD,KAAKE,SAASZ,EAAKa,QAC1CzB,EAASY,EAAKS,SAIhBH,QAAQE,IAAI,gEACZF,QAAQE,IAAIR,EAAKK,QACjBC,QAAQE,IAAIR,EAAKO,SAGrBX,EAAQkB,QAAU,WAEhBR,QAAQE,IAAI,qEAEdZ,EAAQmB,SAiCF,0BAAMvB,GAAG,aAAT,eAEF,yBAAKE,UAAU,MAAMD,eAAa,uBAChC,uBAAGuB,KAAI,+CAA0C9B,EAAMH,WACrDkC,OAAO,SACPzB,GAAG,eAFL,kB,MC1EV0B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.e33d5a7f.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nconst littleWillieText = [\"Willie found some dynamite,\", \"Didn't understand it quite.\", \"Curiosity seldom pays,\", \"It rained Willie seven days.\"]\n\nconst littleWillie = (<ul>\n                        {littleWillieText.map((line) => { return <li>{line}</li> })}\n                      </ul>);\n\nfunction QuoteMachine() {\n  const initialState = {\n    author: 'unknown',\n    title: 'Little Willies',\n    lines: littleWillie,\n    tweetText: littleWillieText.join(' ') + ' - author unknown  https://jessmear.github.io/fcc-quote-machine/'\n  }\n  const [state, setState] = useState(initialState);\n\n  const getPoetry = () => {\n    const poemAPI = \"http://poetrydb.org/linecount/4:abs\";\n    const request = new XMLHttpRequest();\n    request.open('GET', poemAPI, true);\n\n    request.onload = function() {\n      var data = JSON.parse(this.response);\n      if (this.status >= 200 && this.status < 400) {\n        if(console.status && console.reason) {\n          console.log(\"Something went wrong. Please refresh the page and try again.\")\n          console.log(data.status)\n          console.log(data.reason)\n        } else { // everything went right\n          const num = Math.floor(Math.random()*data.length);\n          makePoem(data[num]);\n        }\n      } else {\n        // We reached our target server, but it returned an error\n        console.log(\"Something went wrong. Please refresh the page and try again.\")\n        console.log(data.status)\n        console.log(data.reason)\n      }\n    };\n    request.onerror = function() {\n      // There was a connection error of some sort\n      console.log(\"Connection problem found, please refresh the page and try again.\");\n    };\n    request.send();\n  }\n\n  const makePoem = poem => {\n    const lines = buildLines(poem.lines);\n    const tweetText = poem.title + ' by ' + poem.author + ' ' + poem.lines.join(\" / \");\n    setState({\n      author: poem.author,\n      title: poem.title,\n      lines,\n      tweetText\n    })\n  }\n\n  const buildLines = (lines) => {\n    const verse = lines.map(line => {\n      return <li>{line}</li>\n    })\n    return(\n      <ul>\n        {verse}\n      </ul>\n    )\n  }\n\n  return (\n    <div id=\"quote-machine\">\n      <div id=\"quote-box\" augmented-ui=\"r-rect bl-rect exe\">\n        <p id=\"title\">{state.title}</p>\n        <p id=\"author\">by {state.author}</p>\n        <p id=\"text\">{state.lines}</p>\n        \n        <div className=\"btn\" augmented-ui=\"tl-clip br-clip exe\" onClick={getPoetry}>\n          <span id=\"new-quote\">poem again</span>\n        </div>\n        <div className=\"btn\" augmented-ui=\"tl-clip br-clip exe\">\n          <a href={`http://twitter.com/intent/tweet?text=${state.tweetText}`}\n            target=\"_blank\" \n            id=\"tweet-quote\">\n              tweet poem\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuoteMachine;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './augmented.css';\nimport './index.scss';\nimport QuoteMachine from './QuoteMachine';\nimport 'victormono';\n\nReactDOM.render(<QuoteMachine />, document.getElementById('root'));"],"sourceRoot":""}